FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# API example
Na co je potřeba při vývoji API myslet:
- role (výroba/zákazník) a s tím spojená authentizace/autorizace
- verzování (přístupy jsou různé, např. https://www.xmatters.com/blog/devops/blog-four-rest-api-versioning-strategies/)

Backup: https://github.com/Hubackova/api-example

## Selections [/selections]

### Selections [GET]
Možná nastavení pro jednotlivý plugs. Pokud bude variant nastavení víc (např. pro různé modely), připravme endopoint rovnou jako /selections/{modelId}

+ Response 200 (application/json)

        {
            "RxSP4T":{
                "properties": ["AMP", "BP"],
                "input":[
                    "IN1",
                    "IN2",
                    "IN3",
                    "IN4"
                ],
                "output": ["OUT"]
            },
            "RxSPDT":{
                "properties": ["AMP", "BP"],
                "input":[
                    "IN1",
                    "IN2"
                ],
                "output": ["OUT"]
            },
            "RxSingle":{
                "properties": ["AMP", "BP"],
                "input":[
                    "IN"
                ],
                "output": ["OUT"]
            },
            "RxDual":{
                "properties": ["AMP", "BP"],
                "inputA":[
                    "IN1A",
                    "IN2A"
                ],
                "inputB":[
                    "IN1B",
                    "IN2B"
                ],
                "output": ["OUTA", "OUTB"]
            },
             "SP8T":{
                "properties": ["ON", "OFF"],
                "input":[
                    "IN1",
                    "IN2",
                    "IN3",
                    "IN4",
                    "IN5",
                    "IN6",
                    "IN7",
                    "IN8"
                ],
                "output": ["OUT"]
            },
            "SP4T":{
                "properties": [],
                "input":[
                    "IN1",
                    "IN2",
                    "IN3",
                    "IN4"
                ],
                "output": ["OUT"]
            },
            "DPDT":{
                "properties": ["ON", "OFF"],
                "inputA":[
                    "IN1A",
                    "IN2A"
                ],
                "inputB":[
                    "IN1B",
                    "IN2B"
                ],
                "output": ["OUTA", "OUTB"]
            },

            "ATTN":{
                "properties":{
                    "min":0,
                    "max":7,
                    "step":1,
                    "unit":"dB"
                },
                "input":[
                    "IN"
                ],
                "output": ["OUT"]
            },
            "ATTNDual":{
                "properties":{
                    "min":0,
                    "max":7,
                    "step":1,
                    "unit":"dB"
                },
                "inputA":[
                    "INA"
                ],
               "inputB":[
                    "INB"
                ],
                "output": ["OUTA", "OUTB"]
            },
            "AMP":{
                "properties": ["ON", "OFF"],
                "input":[
                    "IN"
                ],
                "output": ["OUT"]
            },
            "AMPDual":{
                "properties": ["ON", "OFF"],
                "inputA":[
                    "INA"
                ],
                "inputB":[
                    "INB"
                ],
                "output": ["OUTA", "OUTB"]
            },
            "noiceSource":{
                "properties": ["ON", "OFF"],
                "input":[],
                "output": ["OUT"]
            }
        }
        
## SocketsOptions [/socketsOptions]

### SocketsOptions [GET]
Možné varianty sockets pro inner/outer
Stejně jako výše - pokud bude víc variant, může být /socketsOptions/{modelId}
+ Response 200 (application/json)

        {
          "outer": [
            "Outer1",
            "Outer2",
            "Outer3",
            "Outer4",
            "Outer5",
            "Outer6",
            "Outer7",
            "Outer8",
            "Outer9",
            "Outer10",
            "Outer11",
            "Outer12",
            "Outer13",
            "Outer14",
            "Outer15",
            "Outer16"
          ],
          "inner": [    
            "Inner1",
            "Inner2",
            "Inner3",
            "Inner4",
            "Inner5",
            "Inner6",
            "Inner7",
            "Inner8",
            "Inner9",
            "Inner10",
            "Inner11",
            "Inner12",
            "Inner13"
           ]
        }
        
## PlugsOptions [/plugsOptions]

### PlugsOptions [GET]
Možné varianty plugs pro inner/outer
Stejně jako výše - pokud bude víc variant, může být /plugsOptions/{modelId}

+ Response 200 (application/json)

        {
            "outer": ["RxSP4T", "RxSPDT", "RxSingle", "RxDual"],
            "inner": [
                "SP4T",
                "SP8T",
                "DPDT",
                "ATTN",
                "ATTNDual",
                "AMP",
                "AMPDual",
                "NoiseSource"
            ]
        }
        
## Values [/defaultValues]

### Default Values [GET]
Defaultní nastavení tabulky - tj. všech 64 (případně klidně víc/míň řádků)
Případně můžeme mít endpoint rovnou jako /defaultValues/{modelId}, pokud je jisté, že defaultních nastavení bude víc typů.
Pokud by mělo být v budoucnu víc/míň socketů, backend pošle v poli stages o objekt víc/míň.

Mimoto, by měla vzniknout routa GET /values (popř. /values/{modelId}), která vrátí nastavení daného uživatele (struktura JSONu bude stejná)
Upravy bych pak viděla v první fázi jako PUT celé tabulky - to asi bude nejjednodušší, tj. PUT /values (popř. /values/{modelId}) a v body kompletní tabulka, 
V druhé fázi jako PATCH jednotlivých řádků, nebo stagí (proto bych tam dávala ty unikátní id a počítala s tím při ukládání dat do db)
Případně může klidně být rovnou PATCH (nechávám na Tobě, popř. na člověku, co bude dělat BE)



+ Response 200 (application/json)

        [
          {
            "id": 1,
            "stages": [
              { 
                "stageId": "1st1",
                "socketType": "outer",
                "socket": "Outer1",
                "plug": "RxSP4T",
                "input": "IN1",
                "output": "OUT",
                "property": "AMP"
              },
              { 
                "stageId": "1st2",
                "socketType": "inner",
                "socket": "Inner1",
                "plug": "SP4T",
                "input": "IN1",
                "output": "OUT",
                "property": ""
              },
              { 
                "stageId": "1st3",
                "socketType": "inner",
                "socket": "Inner5",
                "plug": "SP4T",
                "input": "IN1",
                "output": "OUT",
                "property": ""
              },
              { 
                "stageId": "1st4",
                "socketType": "inner",
                "socket": "Inner6",
                "plug": "AMP",
                "input": "IN",
                "output": "OUT",
                "property": "ON"
              },
              { 
                "stageId": "1st5",
                "socketType": "inner",
                "socket": "Inner7",
                "plug": "ATTN",
                "input": "IN",
                "output": "OUT",
                "property": 0
              }
            ]
          },
          {
            "id": 2,
            "stages": [
              { 
                "stageId": "2st1",
                "socketType": "outer",
                "socket": "Outer1",
                "plug": "RxSP4T",
                "input": "IN2",
                "output": "OUT",
                "property": "AMP"
              },
              { 
                "stageId": "2st2",
                "socketType": "inner",
                "socket": "Inner1",
                "plug": "SP4T",
                "input": "IN1",
                "output": "OUT",
                "property": ""
              },
              { 
                "stageId": "2st3",
                "socketType": "inner",
                "socket": "Inner5",
                "plug": "SP4T",
                "input": "IN1",
                "output": "OUT",
                "property": ""
              },
              { 
                "stageId": "2st4",
                "socketType": "inner",
                "socket": "Inner6",
                "plug": "AMP",
                "input": "IN",
                "output": "OUT",
                "property": "ON"
              },
              { 
                "stageId": "2st5",
                "socketType": "inner",
                "socket": "Inner7",
                "plug": "ATTN",
                "input": "IN",
                "output": "OUT",
                "property": 0
              }
            ]
          }
        ]
      
      
      
      
      
      
      
      
        
## Whole Table [/table]

### List All Table Cells [GET]

+ Response 200 (application/json)

        [
          {
            "stepIndex": 1,
            "stepDuration": 10,
            "outer1": {
              "OUT": "IN1-AMP"
            },
            "outer2": {
              "OUT": "IN1-AMP"
            },
            "outer3": {
              "OUT": "IN1-AMP"
            },
            "outer4": {
              "OUT": "IN1-AMP"
            },
            "outer5": {
              "OUT": "IN1-AMP"
            },
            "outer5": {
              "OUT": "IN1-AMP"
            },
            "outer6": {
              "OUT": "IN1-AMP"
            },
            "outer7": {
              "OUT": "IN4-AMP"
            },
            "outer8": {
              "OUT": "IN1-AMP"
            },
            "outer9": {
              "OUT": "IN2-AMP"
            },
            "outer10": {
              "OUT": "IN1-AMP"
            },
            "outer11": {
              "OUT": "IN1-AMP"
            },
            "outer12": {
              "OUT": "IN1-AMP"
            },
            "outer13": {
              "OUT": "IN2-AMP"
            },
            "outer14": {
              "OUT": "IN1-AMP"
            },
            "outer15": {
              "OUT": "IN1-AMP"
            },
            "outer16": {
              "OUT": "IN1-AMP"
            },
            "inner1": {
              "OUT": "IN3-AMP"
            },
            "inner2": {
              "OUT": "IN7"
            },
            "inner3": {
              "OUTA": "IN1A",
              "OUTB": "IN3B"
            },
            "inner4": {
              "OUT": 5
            },
            "inner5": {
              "OUTA": 5,
              "OUTB": 7
            },
            "inner6": {
              "OUT": "ON"
            },
            "inner7": {
              "OUTA": "ON",
              "OUTB": "OFF"
            }
          },
          {
            "stepIndex": 2,
            "stepDuration": 15,
            "outer1": {
              "OUT": "IN1-AMP"
            },
            "outer2": {
              "OUT": "IN1-AMP"
            },
            "outer3": {
              "OUT": "IN1-AMP"
            },
            "outer4": {
              "OUT": "IN1-AMP"
            },
            "outer5": {
              "OUT": "IN1-AMP"
            },
            "outer5": {
              "OUT": "IN1-AMP"
            },
            "outer6": {
              "OUT": "IN1-AMP"
            },
            "outer7": {
              "OUT": "IN1-AMP"
            },
            "outer8": {
              "OUT": "IN1-AMP"
            },
            "outer9": {
              "OUT": "IN1-AMP"
            },
            "outer10": {
              "OUT": "IN1-AMP"
            },
            "outer11": {
              "OUT": "IN1-AMP"
            },
            "outer12": {
              "OUT": "IN1-AMP"
            },
            "outer13": {
              "OUT": "IN1-AMP"
            },
            "outer14": {
              "OUT": "IN1-AMP"
            },
            "outer15": {
              "OUT": "IN1-AMP"
            },
            "outer16": {
              "OUT": "IN1-AMP"
            },
            "inner1": {
              "OUT": "IN3"
            },
            "inner2": {
              "OUT": "IN7"
            },
            "inner3": {
              "OUTA": "IN1A",
              "OUTB": "IN3B"
            },
            "inner4": {
              "OUT": 5
            },
            "inner5": {
              "OUTA": 5,
              "OUTB": 7
            },
            "inner6": {
              "OUT": "ON"
            },
            "inner7": {
              "OUTA": "ON",
              "OUTB": "OFF"
            }
          }
        ]



## Module values [/module-values]

### List All Module options values [GET]

+ Response 200 (application/json)

        {
            "RxSP4T":{
                "OUT":[
                    "IN1-AMP",
                    "IN2-AMP",
                    "IN3-AMP",
                    "IN4-AMP",
                    "IN1-BP",
                    "IN2-BP",
                    "IN3-BP",
                    "IN4-BP"
                ]
            },
            "RxSPDT":{
                "OUT":[
                    "IN1-AMP",
                    "IN1-BP",
                    "IN2-AMP",
                    "IN2-BP"
                ]
            },
            "RxSPDTDual":{
                "OUTA":[
                    "IN1-AMP",
                    "IN1-BP",
                    "IN2-AMP",
                    "IN2-BP"
                ],
                "OUTB":[
                    "IN1-AMP",
                    "IN1-BP",
                    "IN2-AMP",
                    "IN2-BP"
                ]
            },
            "RxSingle":{
                "OUT":[
                    "AMP",
                    "BP"
                ]
            },
            "RxSingleDual":{
                "OUTA":[
                    "ON",
                    "OFF"
                ],
                "OUTB":[
                    "ON",
                    "OFF"
                ]
            },
            "SwitchSP4T":{
                "OUT":[
                    "IN1",
                    "IN2",
                    "IN3",
                    "IN4"
                ]
            },
            "SwitchSP8T":{
                "OUT":[
                    "IN1",
                    "IN2",
                    "IN3",
                    "IN4",
                    "IN5",
                    "IN6",
                    "IN7",
                    "IN8"
                ]
            },
            "NoiceSource":{
                "OUT":[
                    "ON",
                    "OFF"
                ]
            },
            "SwitchDP4T":{
                "OUTA":[
                    "IN1A",
                    "IN2A",
                    "IN3A",
                    "IN4A"
                ],
                "OUTB":[
                    "IN1B",
                    "IN2B",
                    "IN3B",
                    "IN4B"
                ]
            },
            "Attenuator":{
                "OUT":{
                    "min":0,
                    "max":7,
                    "step":1,
                    "unit":"dB"
                }
            },
            "AttenuatorDual":{
                "OUTA":{
                    "min":0,
                    "max":7,
                    "step":1,
                    "unit":"dB"
                },
                "OUTB":{
                    "min":0,
                    "max":7,
                    "step":1,
                    "unit":"dB"
                }
            },
            "Amplifier":{
                "OUT":[
                    "ON",
                    "OFF"
                ]
            },
            "AmplifierDual":{
                "OUTA":[
                    "ON",
                    "OFF"
                ],
                "OUTB":[
                    "ON",
                    "OFF"
                ]
            }
        }
        
## Table headers [/table-headers]
### Get  [GET]

+ Response 200 (application/json)

        {
          "stepIndex": {
            "key": "stepIndex",
            "headerLabel": "Step Index"
          },
          "stepDuration": {
            "key": "stepDuration",
            "headerLabel": "Step Duration"
          },
          "outer1": {
            "key": "outer1",
            "headerLabel": "Outer 1",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer2": {
            "key": "outer2",
            "headerLabel": "Outer 2",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer3": {
            "key": "outer3",
            "headerLabel": "Outer 3",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer4": {
            "key": "outer4",
            "headerLabel": "Outer 4",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer5": {
            "key": "outer5",
            "headerLabel": "Outer 5",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer6": {
            "key": "outer6",
            "headerLabel": "Outer 6",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer7": {
            "key": "outer7",
            "headerLabel": "Outer 7",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer8": {
            "key": "outer8",
            "headerLabel": "Outer 8",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer9": {
            "key": "outer9",
            "headerLabel": "Outer 9",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer10": {
            "key": "outer10",
            "headerLabel": "Outer 10",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer11": {
            "key": "outer11",
            "headerLabel": "Outer 11",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer12": {
            "key": "outer12",
            "headerLabel": "Outer 12",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer13": {
            "key": "outer13",
            "headerLabel": "Outer 13",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer14": {
            "key": "outer14",
            "headerLabel": "Outer 14",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer15": {
            "key": "outer15",
            "headerLabel": "Outer 15",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "outer16": {
            "key": "outer16",
            "headerLabel": "Outer 16",
            "idPlug": "RxSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "inner1": {
            "key": "inner1",
            "headerLabel": "Inner 1",
            "idPlug": "SwitchSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "inner2": {
            "key": "inner2",
            "headerLabel": "Inner 2",
            "idPlug": "SwitchSP4T",
            "outputs": {
              "OUT": "OUT"
            }
          },
          "inner3": {
            "key": "inner3",
            "headerLabel": "Inner 3",
            "idPlug": "SwitchDP4T",
            "outputs": {
              "OUTA": "OUTA",
              "OUTB": "OUTB"
            }
          },
          "inner4": {
            "key": "inner4",
            "headerLabel": "Inner 4",
            "idPlug": "Attenuator",
            "outputs": {
              "OUT": "ATTN"
            }
          },
          "inner5": {
            "key": "inner5",
            "headerLabel": "Inner 5",
            "idPlug": "AttenuatorDual",
            "outputs": {
              "OUTA": "ATTNA",
              "OUTB": "ATTNB"
            }
          },
          "inner6": {
            "key": "inner6",
            "headerLabel": "Inner 6",
            "idPlug": "Amplifier",
            "outputs": {
              "OUT": "AMP"
            }
          },
          "inner7": {
            "key": "inner7",
            "headerLabel": "Inner 7",
            "idPlug": "AmplifierDual",
            "outputs": {
              "OUTA": "AMPA",
              "OUTB": "AMPB"
            }
          }
        }

        
## Table update [/table/{time}]
### Update time-values in a column [PUT]
Update tabulky 
in progress - podle toho, jak se domluvime na GET tabulky 

+ Request (application/json)

+ Attributes

            
+ Parameters
    + time (integer) - ID radku (casu) jako integer       

+ Response 200 (application/json)